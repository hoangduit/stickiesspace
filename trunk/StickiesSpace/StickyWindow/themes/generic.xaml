<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:StickyWindow"
    xmlns:cvrt="clr-namespace:LearnWPF.Converters"
    xmlns:e="clr-namespace:stickiesSpace"
    >

  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#ddd" />
  <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
  
  <cvrt:ArithmeticConverter x:Key="AC"/>

  <Style TargetType="ContextMenu">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="HasDropShadow" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContextMenu">
          <Border
            Name="Border"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="2" >
            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
              <Setter TargetName="Border" Property="CornerRadius" Value="10"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  
  <Style TargetType="{x:Type local:StickyWindowModel}">

    <Setter Property="Height" Value="200" />
    <Setter Property="Width" Value="200" />
    <Setter Property="MinHeight" Value="50" />
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="MyWindowState" Value="Normal" />
    <Setter Property="ResizeMode" Value="CanResizeWithGrip" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:StickyWindowModel}">

          <Canvas x:Name="container"  HorizontalAlignment="Left" VerticalAlignment="Top" 
                  Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                  Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">

            <Border x:Name="border" BorderBrush="Red" BorderThickness="10" CornerRadius="5"
                    Height="{Binding Path=ActualHeight, ElementName=container}"
                    Width="{Binding Path=ActualWidth, ElementName=container}" >
              <!--<Border x:Name="borderInner" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="5">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="0.507*"/>
                    <RowDefinition Height="0.493*"/>
                  </Grid.RowDefinitions>
                  <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
                    <Border.Background>
                      <RadialGradientBrush>
                        <RadialGradientBrush.RelativeTransform>
                          <TransformGroup>
                            <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                            <SkewTransform AngleX="0" AngleY="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform X="-0.368" Y="-0.152"/>
                          </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="#B28DBDFF" Offset="0"/>
                        <GradientStop Color="#008DBDFF" Offset="1"/>
                      </RadialGradientBrush>
                    </Border.Background>
                  </Border>
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
                  <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                    <Border.Background>
                      <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                        <GradientStop Color="#99FFFFFF" Offset="0"/>
                        <GradientStop Color="#33FFFFFF" Offset="1"/>
                      </LinearGradientBrush>
                    </Border.Background>
                  </Border>
                </Grid>
              </Border>-->              
            </Border>

            <Ellipse x:Name="contextCircle" Fill="Gray" Height="8" Width="8" Canvas.Left="3" Canvas.Top="3" />

            <local:MyScrollViewer x:Name="scroller" Canvas.Top="10" Canvas.Left="10" VerticalScrollBarVisibility="Hidden"
                          Height="{Binding Path=ActualHeight, ElementName=container,
                                            Converter={StaticResource AC},
                                            ConverterParameter=Int32.Parse(-10)}"
                          Width="{Binding Path=ActualWidth, ElementName=container,
                                            Converter={StaticResource AC},
                                            ConverterParameter=Int32.Parse(-10)}" >

              <local:MyTextBox x:Name="txtArea" Background="LightBlue" Padding="0,0,10,10" BorderThickness="0"
                       AcceptsTab="True" AcceptsReturn="True" TextWrapping="Wrap"  ActiveState="Active" PreviousActiveState="Active"/>

            </local:MyScrollViewer>

            <local:MySlider x:Name="slider" Orientation="Vertical" Width="13" Background="Transparent"
                    Canvas.Right="-35" Canvas.Top="15" IsDirectionReversed="True" Minimum="0"
                    Height="{Binding Path=ActualHeight, ElementName=scroller,
                                      Converter={StaticResource AC},
                                      ConverterParameter=Int32.Parse(-25)}" 
                    Value="{Binding Path=MyVerticalOffset, ElementName=scroller}" />

            <ResizeGrip x:Name="WindowResizeGrip" Canvas.Right="0" Canvas.Bottom="0" Visibility="Collapsed" IsTabStop="False"/>

          </Canvas>

          
          <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
              <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>

          
          <ControlTemplate.Resources>
            
            <Storyboard x:Key="animationsMinimize">
              <DoubleAnimation
                Storyboard.TargetProperty="(Window.Height)"
                From="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                To="20"
                Duration="0:0:0.25" />
              <DoubleAnimation
                Storyboard.TargetProperty="(Window.Width)"
                From="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                To="20"
                Duration="0:0:0.25" />
            </Storyboard>

            <Storyboard x:Key="animationsRestore">
              <DoubleAnimation
                Storyboard.TargetProperty="(Window.Height)"
                From="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                To="{Binding Path=OriginalSize.Height, RelativeSource={RelativeSource TemplatedParent}}"
                Duration="0:0:0.25" />
              <DoubleAnimation
                Storyboard.TargetProperty="(Window.Width)"
                From="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                To="{Binding Path=OriginalSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                Duration="0:0:0.25" />
            </Storyboard>

            <Storyboard x:Key="animationsFitContent">
              <DoubleAnimation
                Storyboard.TargetProperty="(Window.Height)"
                From="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                Duration="0:0:0.25" />
              <DoubleAnimation
                Storyboard.TargetProperty="(Window.Width)"
                From="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                To="200"
                Duration="0:0:0.25" />
            </Storyboard>
            
          </ControlTemplate.Resources>

          
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>





</ResourceDictionary>
